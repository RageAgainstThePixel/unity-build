name: unity-build-validation

on:
  schedule:
    - cron: '0 0 * * 0' # Every Sunday at midnight
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  build:
    timeout-minutes: 20
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        unity-version: [2020.3.x, 2021.3.x, 2022.3.x, 6000.0.x]
        include:
          - os: ubuntu-latest
            build-target: StandaloneLinux64
          - os: windows-latest
            build-target: StandaloneWindows64
          - os: macos-latest
            build-target: StandaloneOSX
    steps:
      - name: Remove unused applications
        run: |
          df -hI /dev/disk3s1s1
          sudo rm -rf /Applications/Xcode_14.3.1.app
          sudo rm -rf /Applications/Xcode_15.0.1.app
          sudo rm -rf /Applications/Xcode_15.1.app
          sudo rm -rf /Applications/Xcode_15.2.app
          sudo rm -rf /Applications/Xcode_15.3.app
          sudo rm -rf /Applications/Xcode_16_beta_6.app
          df -hI /dev/disk3s1s1
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: RageAgainstThePixel/com.utilities.buildpipeine
          path: test-project
        # Installs the Unity Editor based on your project version text file
        # sets -> env.UNITY_EDITOR_PATH
        # sets -> env.UNITY_PROJECT_PATH
      - uses: RageAgainstThePixel/unity-setup@v1
        with:
          unity-version: ${{ matrix.unity-version }}
          build-targets: ${{ matrix.build-target }}
          version-file: 'test-project/Utilities.BuildPipeline/ProjectSettings/ProjectVersion.txt'

        # Activates the installation with the provided credentials
      - uses: RageAgainstThePixel/activate-unity-license@v1
        with:
          license: 'Personal' # Chooses license type to use [ Personal, Professional ]
          username: ${{ secrets.UNITY_USERNAME }}
          password: ${{ secrets.UNITY_PASSWORD }}
          # serial: ${{ secrets.UNITY_SERIAL }} # Required for pro activations

      - name: Unity Build (${{ matrix.build-target }})
        uses: ./ #RageAgainstThePixel/unity-build
        with:
          build-target: ${{ matrix.build-target }}
          output-directory: ${{ github.workspace }}/Artifacts/${{ matrix.build-target }}
          additional-validation-args: -importTMProEssentialsAsset
          additional-build-args: -export
          Artifact-Name: '${{ github.run_number }}.${{ github.run_attempt }}-${{ runner.os }}-${{ matrix.build-target }}-${{ matrix.unity-version }}-Artifacts'

      - name: Unity Build No Tests (${{ matrix.build-target }})
        uses: ./ #RageAgainstThePixel/unity-build
        with:
          build-target: ${{ matrix.build-target }}
          output-directory: ${{ github.workspace }}/Artifacts/${{ matrix.build-target }}
          additional-validation-args: -importTMProEssentialsAsset
          additional-build-args: -export
          test: false
          Artifact-Name: '${{ github.run_number }}.${{ github.run_attempt }}-${{ runner.os }}-${{ matrix.build-target }}-${{ matrix.unity-version }}-Artifacts'

      - name: Unity Build No Artifacts (${{ matrix.build-target }})
        uses: ./ #RageAgainstThePixel/unity-build
        with:
          build-target: ${{ matrix.build-target }}
          output-directory: ${{ github.workspace }}/Artifacts/${{ matrix.build-target }}
          additional-validation-args: -importTMProEssentialsAsset
          additional-build-args: -export
          publish-artifacts: false
